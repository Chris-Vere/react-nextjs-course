{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christophervere/Documents/projects/udemy-coarses/react-complete-guide/23-next-js-bigger/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport DUMMY_MEETUPS from \"../../data/meetings\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = () => {\n  // console.log('meeting details:', props.meetupData);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"meeting detail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this); // return <MeetupDetail {...props.meetupData } />;\n};\n\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  console.log('meetupId', meetupId);\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId('62571711273fccd310021ff5')\n  }); // const json = await selectedMeetup.json();\n\n  console.log('selectedMeetup', selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const pathsData = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths: pathsData\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/christophervere/Documents/projects/udemy-coarses/react-complete-guide/23-next-js-bigger/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","DUMMY_MEETUPS","MeetupDetail","MeetupDetails","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","props","meetupData","getStaticPaths","meetups","find","toArray","pathsData","map","meetup","toString","fallback","paths"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAE1B;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAH0B,CAI1B;AACD,CALD;;AAOA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,OAAO,CAACE,MAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AAEA,QAAMI,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,oHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAEjB,QAAQ,CAAC,0BAAD;AAAf,GAA1B,CAA7B,CAR4C,CAS5C;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,cAA9B;AACAL,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEL;AADP;AADF,GAAP;AAKD;AAED,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMX,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,oHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMQ,OAAO,GAAG,MAAMT,iBAAiB,CAACU,IAAlB,CAAuB,EAAvB,EAA2B;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCO,OAAvC,EAAtB;AACAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,QAAMO,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AACzCpB,IAAAA,MAAM,EAAE;AAAED,MAAAA,QAAQ,EAAEqB,MAAM,CAACV,GAAP,CAAWW,QAAX;AAAZ;AADiC,GAAb,CAAZ,CAAlB;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL;AAFF,GAAP;AAID;AAED,eAAetB,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\nimport DUMMY_MEETUPS from \"../../data/meetings\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = () => {\n\n  // console.log('meeting details:', props.meetupData);\n  return <p>meeting detail</p>\n  // return <MeetupDetail {...props.meetupData } />;\n}\n\nexport async function getStaticProps(context) {\n  const { meetupId } = context.params;\n\n  console.log('meetupId', meetupId);\n\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId('62571711273fccd310021ff5') });\n  // const json = await selectedMeetup.json();\n  console.log('selectedMeetup', selectedMeetup);\n  client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    }\n  }\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  const pathsData = meetups.map((meetup) => ({\n    params: { meetupId: meetup._id.toString() }\n  }));\n\n  return {\n    fallback: false,\n    paths: pathsData,\n  }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}