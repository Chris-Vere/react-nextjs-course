{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christophervere/Documents/projects/udemy-coarses/react-complete-guide/23-next-js-bigger/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient } from 'mongodb';\nimport DUMMY_MEETUPS from \"../../data/meetings\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n\nexport function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  console.log('meetupId', meetupId); // const meetupData = DUMMY_MEETUPS.find((meetup) => meetup.id === meetupId);\n\n  return {\n    props: {\n      meetupData: {}\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const pathsData = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  console.log('pathsData', pathsData);\n  return {\n    fallback: false,\n    paths: pathsData\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/christophervere/Documents/projects/udemy-coarses/react-complete-guide/23-next-js-bigger/pages/[meetupId]/index.js"],"names":["MongoClient","DUMMY_MEETUPS","MeetupDetail","MeetupDetails","props","meetupData","getStaticProps","context","meetupId","params","console","log","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","pathsData","map","meetup","toString","fallback","paths"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,sBAAO,QAAC,YAAD,oBAAkBA,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;AAKA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,OAAO,CAACE,MAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB,EAFsC,CAGtC;;AAEA,SAAO;AACLJ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AADP;AADF,GAAP;AAKD;AAED,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,oHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAMC,SAAS,GAAGL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AACzChB,IAAAA,MAAM,EAAE;AAAED,MAAAA,QAAQ,EAAEiB,MAAM,CAACL,GAAP,CAAWM,QAAX;AAAZ;AADiC,GAAb,CAAZ,CAAlB;AAIAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBY,SAAzB;AAEA,SAAO;AACLI,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL;AAFF,GAAP;AAID;AAED,eAAepB,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport DUMMY_MEETUPS from \"../../data/meetings\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = (props) => {\n  \n  return <MeetupDetail {...props.meetupData } />;\n}\n\nexport function getStaticProps(context) {\n  const { meetupId } = context.params;\n  console.log('meetupId', meetupId);\n  // const meetupData = DUMMY_MEETUPS.find((meetup) => meetup.id === meetupId);\n\n  return {\n    props: {\n      meetupData: {},\n    }\n  }\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://drummer84:QoXkQLfjy7EqpeLW@cluster0.xvxjb.mongodb.net/reactCourseMeetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  const pathsData = meetups.map((meetup) => ({\n    params: { meetupId: meetup._id.toString() }\n  }));\n\n  console.log('pathsData', pathsData);\n\n  return {\n    fallback: false,\n    paths: pathsData,\n  }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}